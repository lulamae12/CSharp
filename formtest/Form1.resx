<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB4AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA1AAoAAP/bAEMAoG54jHhkoIyCjLSqoL7w///w3Nzw////////////////////////
        ///////////////////////////////////bAEMBqrS08NLw////////////////////////////////
        ///////////////////////////////////////////////AABEIAeAB9gMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/AERQwOad5Y9TSR9DSs4WgA8seppuFHc0wuTSUAP+X1NHy+9MoFAx3HvR
        kUlFABmjNFFABk0bj6UUUAISTSU6jFADaKXFGKBCUUuDSYoAKKKKACiiigBaXFAFOoGNxRinUUAN20hF
        PooAjop5FNK0AKAKXaKb0pytQAbRRtFOpKAE2ik206ikA3FJinUUwG4oxS0UAJijFLRQAmKMUtFACUUu
        KTFABRRRQAUlLRQAlFLSUCClzSUUALmjNJRQAuaM0lFAC5ozSUUALmjNJRQAuaKSigCRW2qaYTmlNNoA
        KKKWgYCloooAKKKKACiiigAoopaQCUUUUAFFLRQACiiloAaRTakph60xCUoFJT1FACgUtFFIYUlGaTNM
        BaKTNJmgB1FNzS5oACtNIxT6MZoAYGxTwc00rSdKAJKSgNmlpAJRS0lACGkp2KQigBBS0lKKYAaSlooA
        KMUUtACUlKRRigBKSnUlACYopaKAEopaMUAJRS4oxQAlFLiigBKKKKAEopaSgQUUUUAKaKDRQMKWkpaA
        CiiigAopKWgAooooAKWiigAooopAFFFFABS0lFACk8VHTiabTAUCn0gFLQAZpM0E03NIBc0hoopgFFGK
        XFACUUUUAANOBptFAElNK0A0tADOlOVqXbmmEYoAkopgan9RQAUlLRSAbRQaKACiloxQAUUUUALRRSUA
        FGKKKAEoxS0UwEpKdSUAJRS0UAJRilooASilNJQAUlLSUAFFFFACmkpaKACiiigAooooAKKKKACiiigA
        paSlpAFFFFABRRSUALRSUGgBDQKSlFMB1GaSg0AFGKTNKDQAoFLRSE0AGaTNJSUAOzQRTaUGgAop2KSg
        AFOFNpwoAcKCM0lLQBGVxQDipDzUZFADwc0tRg4qQHNIBKaadSEUAJTqbSigBaSlooAKKKKAEpaKKAEo
        paSgAooooASilpKACiiigANFFFACUUtJTASiiigBaKBRQAUUUUAFFFFIAooooAKWkooAKKKWgBKKWigA
        opKKACg0UhpgJThTadQAUtJSigBpFFOIpuKAHA8U00UlABRSgZFJQIKKWkoAeOlBoXpQaBiU5aQCnCgB
        aKKKQBSHmg0UAMIoBxT8ZpjDFMCQc0hpitipOtIBppBSmkoAdRRS0AFJS0UAJRRRQAlFLRQAlFLSUAFJ
        S0UAJS0UUAJRRRQAlFLSUwCiiigAFFAooAKKKKACloooAKKKKQCUUtFACUtFFABRRRQAUlLRQAUhpaKY
        DKcKQigGgBaKKWgBRQRSUuaQDSKbUlIRTAbmkpSKSgApQKSngUAKOlBopKAFFOpFFLQAtFIKWkA00UUU
        AFKRmkpaAImGKcrU5hUfSmBIaaaA3ag0AKKcKYKcKQC0UUUAJRRRQAUUUUAFJS0lABRRRQAUlLSUAFFF
        JQAtJS0lMAooooABRRRQAUUUtABRRRQAUUUUgCiiigAooooAKKWigBKKWigBKKWkoAKaRTqKYDQaWkIo
        BxQA6lpM5ooAWiiikAUmKWimAmKSlooATNFLQBQA4U6m0tAC0GkoNIBKKKSgBaKKKACmsKdSUAR9KeDm
        kIoAxTAWnCmg5paAFpaTNFIBaSlpKACiiigBKKWkoAKQ0pptAC0ZpKSmA6im5pc0ALSUUUAFFFFABRSm
        koAKWiigAooooAKKKWkAUUUUAFFFFABRRRQAUUUUAFFFFACUUUUAFNIp1JTAQHFOBppFJ0oAfRSA0UAL
        RRRSAM0UUUwClFJQDQA+ikpaAA00mlJpppALmikooAWlpKKAFppNKTTDQAo5oY9qBwKaeTTAUHFOzTKd
        gigB1FIDS0ALRSUCkAtFJRQAUUUUAJRS0hoASkpaKYCUUUUAApaSigBaKM0UAHainHpTaAFooopAFLSU
        tABRRRQAUUtFACUUtFACUUtFACUUtFACUUUUAFJS0UAJSU6koASjFLSUwG0oNLSEUAOopoOKcOaACijF
        GKAEpQKMUooAWlpKKAA02lNJSAKKKM0ALSZpM0UwA0lLSDrQArcCm0p5pKBDlGTQ57UA4FNoAKUNSUUA
        PzRTKXNAx1FJmlpAFFLSUAFFFFAAaSlopgJSUtFACUUUUAFFFFADz0pKcelNoAKKKKQC0UUUAFLSUtAB
        RRRQAUUUUAFFFFABRRRQAUUUUAFJS0UAJRS0lABSYpaKAG0tFFACEUnSnUYzTAQGnUwjFKDQA6nU0U6k
        AlFFIaAEopKM0wAmkopaACkpc0gGaADrS4pQMUGgBKCKKKAG0UppKBBRRSgUAGKKdSUDEopaMUAAanZB
        phFHSgB9FNDetP60AJRRRSASjFLSUAIaSnGm0wCiiigRIelNp38NNoGFLRRSAKKKKAFooooAKKKKACii
        loAKSlooASilooASiiigAopaSgAooooASilooASiiigBKKKWgBKCtLiloAZkil3U6mlaADdQTSFTSc0w
        Foxml3e1Jk0AGMdaTOelLjNKBigBAKdRRQAUUlFIApKWkpgIaUD5aQ07otADe9LjFIKdQAlFLRQAlLRS
        GgBaMA02lFACEUA4p1BFACg5opnSlDUAOpKWkpABptPNNpgJRQaKAJP4abTuxpKAEpaKKQBS0UUAFFFF
        ABS0UlAC0UUUAFFFFABRRRQAUUUUAFFFFABSUtJQAUUUUAFFFFADSKWiigBaKBS0AJRS0lABSUtJmgAx
        RRSUALRSUUAFFFFABRRRQAUlFFMBO9KaQdaXvQAUtJSUALRRRmgBaQ0tIRQAlFFLQAZpabS0ALjNNIxT
        qXrQAwGng00rSA4oAeabThzSYoAaaKDRQBIOhpKUdDSUAFFFFIBaKKKACiiigBaKKKACiiigAooooAKK
        KKACiiigAooooAKKKKAEopaKAEooooASig0lACilpBRmgBSaaTS9aTFACZozRijFABmijFLigAooxS0A
        JRRRQAUUUUAFIaKDTABQKO1LQAlFLTTQAZoFJThQAUgNOptADiKbTloIoAbS0lFADhS0gpaAFpCtKopx
        oEQ8g07ORSkZppUigBDRS4ooAeOhopR0NJQAlFLRSGFFFFABRRS0AFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAlFFFACGmmnU00AKKWmjrTwKADFGKWigBMUmKfikxQA3FLilxRigBKKXFFADaKdRQ
        A00lOpKAEpDS0hpgFLSd6U0AJQaWkoAbThRijFAC54ptBoFADl6UpoA4oPSgBlFFLQACnDmm1IgoAcBg
        UhpSe1GKBCAUu3NLRQBGVop5ooAaOlJSjpSUAFFFFIYUUUUAFLRRQAUUUlAC0UUUAFFFFABRRRQAUUlF
        AC0UlFAC0UlFAC0UlLQAUlLSUAFIRS0UAMHWpBTCOacpoAWgnFLTWoAN4pQwNRGkzTAnoqIMRUgbNIBa
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>